{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Neeraj/Desktop/Amrutam-assignment/frontend/pages/login.tsx"],"sourcesContent":["// frontend/pages/login.tsx\r\nimport { useState, ChangeEvent, FormEvent } from 'react';\r\nimport { Eye, EyeOff, Mail, Lock, User, LogIn, UserPlus } from 'lucide-react';\r\n\r\ntype FormData = {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n};\r\n\r\ntype Errors = {\r\n  name?: string;\r\n  email?: string;\r\n  password?: string;\r\n};\r\n\r\nexport default function AuthComponent() {\r\n  const [isLogin, setIsLogin] = useState<boolean>(true);\r\n  const [showPassword, setShowPassword] = useState<boolean>(false);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [formData, setFormData] = useState<FormData>({\r\n    name: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n  const [errors, setErrors] = useState<Errors>({});\r\n  const [message, setMessage] = useState<string>('');\r\n\r\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n    // Clear error when user starts typing\r\n    if (errors[name as keyof Errors]) {\r\n      setErrors(prev => ({ ...prev, [name]: '' }));\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors: Errors = {};\r\n\r\n    if (!isLogin && (!formData.name || formData.name.trim().length < 2)) {\r\n      newErrors.name = 'Name must be at least 2 characters long';\r\n    }\r\n\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!formData.email || !emailRegex.test(formData.email)) {\r\n      newErrors.email = 'Invalid email address';\r\n    }\r\n\r\n    if (!isLogin) {\r\n      const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d).{6,}$/;\r\n      if (!formData.password || !passwordRegex.test(formData.password)) {\r\n        newErrors.password = 'Password must be at least 6 characters long and contain both letters and numbers';\r\n      }\r\n    } else {\r\n      if (!formData.password) {\r\n        newErrors.password = 'Password is required';\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) return;\r\n\r\n    setIsLoading(true);\r\n    setMessage('');\r\n\r\n    try {\r\n      const endpoint = isLogin ? '/login' : '/register';\r\n      const payload = isLogin \r\n        ? { email: formData.email, password: formData.password }\r\n        : formData;\r\n\r\n      // Replace with your actual API endpoint\r\n      const response = await fetch(`/api/users${endpoint}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      // Use 'any' for now, or define a type for your API response\r\n      const data: any = await response.json();\r\n\r\n      if (response.ok) {\r\n        setMessage(data.msg);\r\n        \r\n        if (isLogin && data.token) {\r\n          // Store token in localStorage\r\n          localStorage.setItem('authToken', data.token);\r\n          localStorage.setItem('userData', JSON.stringify(data.user));\r\n          \r\n          // Redirect or update app state here\r\n          console.log('Login successful:', data);\r\n          // Example: router.push('/dashboard');\r\n        } else if (!isLogin) {\r\n          // After successful registration, switch to login\r\n          setIsLogin(true);\r\n          setFormData({ name: '', email: '', password: '' });\r\n        }\r\n      } else {\r\n        setMessage(data.msg || 'An error occurred');\r\n      }\r\n    } catch (error) {\r\n      setMessage('Network error. Please try again.');\r\n      console.error('Auth error:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const switchMode = () => {\r\n    setIsLogin(!isLogin);\r\n    setFormData({ name: '', email: '', password: '' });\r\n    setErrors({});\r\n    setMessage('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 flex items-center justify-center p-4\">\r\n      <div className=\"w-full max-w-md\">\r\n        {/* Logo/Header */}\r\n        <div className=\"text-center mb-8\">\r\n          <div className=\"inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full mb-4\">\r\n            <User className=\"w-8 h-8 text-white\" />\r\n          </div>\r\n          <h1 className=\"text-3xl font-bold text-gray-900\">\r\n            {isLogin ? 'Welcome Back' : 'Create Account'}\r\n          </h1>\r\n          <p className=\"text-gray-600 mt-2\">\r\n            {isLogin ? 'Sign in to your account' : 'Join us today'}\r\n          </p>\r\n        </div>\r\n\r\n        {/* Form */}\r\n        <form className=\"bg-white rounded-2xl shadow-xl border border-gray-100 p-8\" onSubmit={handleSubmit}>\r\n          <div className=\"space-y-6\">\r\n            {/* Name field for registration */}\r\n            {!isLogin && (\r\n              <div>\r\n                <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Full Name\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                    <User className=\"h-5 w-5 text-gray-400\" />\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    value={formData.name}\r\n                    onChange={handleInputChange}\r\n                    className={`block w-full pl-10 pr-3 py-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors ${\r\n                      errors.name ? 'border-red-300 bg-red-50' : 'border-gray-300 hover:border-gray-400'\r\n                    }`}\r\n                    placeholder=\"Enter your full name\"\r\n                  />\r\n                </div>\r\n                {errors.name && <p className=\"mt-2 text-sm text-red-600\">{errors.name}</p>}\r\n              </div>\r\n            )}\r\n\r\n            {/* Email field */}\r\n            <div>\r\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Email Address\r\n              </label>\r\n              <div className=\"relative\">\r\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                  <Mail className=\"h-5 w-5 text-gray-400\" />\r\n                </div>\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  value={formData.email}\r\n                  onChange={handleInputChange}\r\n                  className={`block w-full pl-10 pr-3 py-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors ${\r\n                    errors.email ? 'border-red-300 bg-red-50' : 'border-gray-300 hover:border-gray-400'\r\n                  }`}\r\n                  placeholder=\"Enter your email\"\r\n                />\r\n              </div>\r\n              {errors.email && <p className=\"mt-2 text-sm text-red-600\">{errors.email}</p>}\r\n            </div>\r\n\r\n            {/* Password field */}\r\n            <div>\r\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Password\r\n              </label>\r\n              <div className=\"relative\">\r\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                  <Lock className=\"h-5 w-5 text-gray-400\" />\r\n                </div>\r\n                <input\r\n                  type={showPassword ? 'text' : 'password'}\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  value={formData.password}\r\n                  onChange={handleInputChange}\r\n                  className={`block w-full pl-10 pr-12 py-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors ${\r\n                    errors.password ? 'border-red-300 bg-red-50' : 'border-gray-300 hover:border-gray-400'\r\n                  }`}\r\n                  placeholder=\"Enter your password\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                  tabIndex={-1}\r\n                >\r\n                  {showPassword ? (\r\n                    <EyeOff className=\"h-5 w-5 text-gray-400 hover:text-gray-600\" />\r\n                  ) : (\r\n                    <Eye className=\"h-5 w-5 text-gray-400 hover:text-gray-600\" />\r\n                  )}\r\n                </button>\r\n              </div>\r\n              {errors.password && <p className=\"mt-2 text-sm text-red-600\">{errors.password}</p>}\r\n              {!isLogin && (\r\n                <p className=\"mt-2 text-xs text-gray-500\">\r\n                  Password must be at least 6 characters with letters and numbers\r\n                </p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Submit button */}\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n              className=\"w-full flex items-center justify-center px-4 py-3 border border-transparent rounded-lg shadow-sm text-base font-medium text-white bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\r\n            >\r\n              {isLoading ? (\r\n                <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\" />\r\n              ) : isLogin ? (\r\n                <LogIn className=\"w-5 h-5 mr-2\" />\r\n              ) : (\r\n                <UserPlus className=\"w-5 h-5 mr-2\" />\r\n              )}\r\n              {isLoading ? 'Processing...' : isLogin ? 'Sign In' : 'Create Account'}\r\n            </button>\r\n\r\n            {/* Message */}\r\n            {message && (\r\n              <div className={`p-4 rounded-lg text-sm ${\r\n                message.includes('successfully') || message.includes('Success')\r\n                  ? 'bg-green-50 text-green-800 border border-green-200'\r\n                  : 'bg-red-50 text-red-800 border border-red-200'\r\n              }`}>\r\n                {message}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Switch between login/register */}\r\n          <div className=\"mt-6 pt-6 border-t border-gray-200\">\r\n            <p className=\"text-center text-sm text-gray-600\">\r\n              {isLogin ? \"Don't have an account?\" : 'Already have an account?'}\r\n              <button\r\n                type=\"button\"\r\n                onClick={switchMode}\r\n                className=\"ml-2 font-medium text-blue-600 hover:text-blue-500 transition-colors\"\r\n              >\r\n                {isLogin ? 'Create one' : 'Sign in'}\r\n              </button>\r\n            </p>\r\n          </div>\r\n        </form>\r\n\r\n        {/* Footer */}\r\n        <div className=\"text-center mt-8 text-sm text-gray-500\">\r\n          <p>© 2025 Your App Name. All rights reserved.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}